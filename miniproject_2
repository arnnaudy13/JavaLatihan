package com.latihanjuara;

import java.sql.*;
import java.util.Scanner;

public class StudentManagementApp {
    private static final String URL = "jdbc:sqlserver://localhost:1433;databaseName=latihanjuara;encrypt=true;trustServerCertificate=true";
    private static final String USER = "latihanjuarauser";
    private static final String PASSWORD = "13122001";

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            System.out.println("\n===== STUDENT MANAGEMENT SYSTEM =====");
            System.out.println("1. Add Student");
            System.out.println("2. View All Students");
            System.out.println("3. Update Student");
            System.out.println("4. Delete Student");
            System.out.println("5. Search Student");
            System.out.println("6. Aggregate Data");
            System.out.println("7. Exit");
            System.out.print("Choose an option: ");

            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline

            switch (choice) {
                case 1 -> addStudent(scanner);
                case 2 -> viewAllStudents();
                case 3 -> updateStudent(scanner);
                case 4 -> deleteStudent(scanner);
                case 5 -> searchStudent(scanner);
                case 6 -> aggregateData();
                case 7 -> {
                    System.out.println("Exiting... Thank you!");
                    scanner.close();
                    return;
                }
                default -> System.out.println("Invalid choice. Please try again.");
            }
        }
    }

    private static Connection getConnection() throws SQLException, ClassNotFoundException {
        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
        return DriverManager.getConnection(URL, USER, PASSWORD);
    }

    private static void addStudent(Scanner scanner) {
        System.out.print("Enter Name: ");
        String name = scanner.nextLine();
        System.out.print("Enter Email: ");
        String email = scanner.nextLine();
        System.out.print("Enter Age: ");
        int age = scanner.nextInt();
        scanner.nextLine(); // Consume newline
        System.out.print("Enter Major: ");
        String major = scanner.nextLine();
        System.out.print("Enter GPA: ");
        double gpa = scanner.nextDouble();
        scanner.nextLine(); // Consume newline

        String sql = "INSERT INTO students (name, email, age, major, gpa) VALUES (?, ?, ?, ?, ?)";
        try (Connection conn = getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, name);
            stmt.setString(2, email);
            stmt.setInt(3, age);
            stmt.setString(4, major);
            stmt.setDouble(5, gpa);
            stmt.executeUpdate();
            System.out.println("‚úÖ Student added successfully!");
        } catch (SQLException | ClassNotFoundException e) {
            e.printStackTrace();
        }
    }

    private static void viewAllStudents() {
        String sql = "SELECT * FROM students";
        try (Connection conn = getConnection();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {
            System.out.println("\n===== STUDENT LIST =====");
            while (rs.next()) {
                System.out.printf("ID: %d | Name: %s | Email: %s | Age: %d | Major: %s | GPA: %.2f\n",
                        rs.getInt("id"), rs.getString("name"), rs.getString("email"),
                        rs.getInt("age"), rs.getString("major"), rs.getDouble("gpa"));
            }
        } catch (SQLException | ClassNotFoundException e) {
            e.printStackTrace();
        }
    }

    private static void updateStudent(Scanner scanner) {
        System.out.print("Enter Student ID to update: ");
        int id = scanner.nextInt();
        scanner.nextLine(); // Consume newline
        System.out.print("Enter New Name: ");
        String name = scanner.nextLine();
        System.out.print("Enter New Email: ");
        String email = scanner.nextLine();
        System.out.print("Enter New Age: ");
        int age = scanner.nextInt();
        scanner.nextLine(); // Consume newline
        System.out.print("Enter New Major: ");
        String major = scanner.nextLine();
        System.out.print("Enter New GPA: ");
        double gpa = scanner.nextDouble();
        scanner.nextLine(); // Consume newline

        String sql = "UPDATE students SET name=?, email=?, age=?, major=?, gpa=? WHERE id=?";
        try (Connection conn = getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, name);
            stmt.setString(2, email);
            stmt.setInt(3, age);
            stmt.setString(4, major);
            stmt.setDouble(5, gpa);
            stmt.setInt(6, id);
            int rowsUpdated = stmt.executeUpdate();
            if (rowsUpdated > 0) {
                System.out.println("‚úÖ Student updated successfully!");
            } else {
                System.out.println("‚ùå Student ID not found.");
            }
        } catch (SQLException | ClassNotFoundException e) {
            e.printStackTrace();
        }
    }

    private static void deleteStudent(Scanner scanner) {
        System.out.print("Enter Student ID to delete: ");
        int id = scanner.nextInt();
        scanner.nextLine(); // Consume newline

        String sql = "DELETE FROM students WHERE id=?";
        try (Connection conn = getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setInt(1, id);
            int rowsDeleted = stmt.executeUpdate();
            if (rowsDeleted > 0) {
                System.out.println("‚úÖ Student deleted successfully!");
            } else {
                System.out.println("‚ùå Student ID not found.");
            }
        } catch (SQLException | ClassNotFoundException e) {
            e.printStackTrace();
        }
    }

    private static void searchStudent(Scanner scanner) {
        System.out.print("Enter Name or Major to search: ");
        String keyword = scanner.nextLine();

        String sql = "SELECT * FROM students WHERE name LIKE ? OR major LIKE ?";
        try (Connection conn = getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, "%" + keyword + "%");
            stmt.setString(2, "%" + keyword + "%");
            ResultSet rs = stmt.executeQuery();

            System.out.println("\n===== SEARCH RESULTS =====");
            while (rs.next()) {
                System.out.printf("ID: %d | Name: %s | Email: %s | Age: %d | Major: %s | GPA: %.2f\n",
                        rs.getInt("id"), rs.getString("name"), rs.getString("email"),
                        rs.getInt("age"), rs.getString("major"), rs.getDouble("gpa"));
            }
        } catch (SQLException | ClassNotFoundException e) {
            e.printStackTrace();
        }
    }

    private static void aggregateData() {
        String sqlAvgGPA = "SELECT AVG(gpa) AS avg_gpa FROM students";
        String sqlCount = "SELECT COUNT(*) AS total_students FROM students";

        try (Connection conn = getConnection();
             Statement stmt = conn.createStatement()) {
            ResultSet rsAvg = stmt.executeQuery(sqlAvgGPA);
            if (rsAvg.next()) {
                System.out.printf("\nüìä Average GPA: %.2f\n", rsAvg.getDouble("avg_gpa"));
            }

            ResultSet rsCount = stmt.executeQuery(sqlCount);
            if (rsCount.next()) {
                System.out.printf("üìä Total Students: %d\n", rsCount.getInt("total_students"));
            }
        } catch (SQLException | ClassNotFoundException e) {
            e.printStackTrace();
        }
    }
}
